/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package trabalho;

import Entidades.Employee;
import Entidades.NameGenerator;
import Entidades.Player;
import Entidades.Profession;
import Entidades.Story;
import Entidades.Unemployed;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author joaoluis
 */
public class Contratar extends javax.swing.JFrame {
    private Player player;
    private Story gameStory;
    /**
     * Creates new form Contratar
     */
    public Contratar(Player player, Story gameStory) {
        this.player = player;
        this.gameStory = gameStory;
        initComponents();
        ArrayList<Employee> candidatosParaContratar = new ArrayList<>();
    
        DefaultTableModel model = (DefaultTableModel) hiringTable.getModel();
        model.setRowCount(0);

        Random randomStats = new Random();
        int numeroDeCandidatos = 6; 
        // Gera 6 candidatos aleatórios para a lista.

        for (int i = 0; i < numeroDeCandidatos; i++) {
        
        String professionTitle = NameGenerator.getRandomUnemployedProfession();
        String employeeName = NameGenerator.getRandomName();
        String place = NameGenerator.getRandomPlace();

        double wage = 5 + randomStats.nextInt(50); // Salário entre 5 e 54.
        double profitability = wage + 2 + randomStats.nextInt(30); // Lucratividade é sempre maior que o salário.

        Employee candidate = new Employee(player, place, employeeName, wage, profitability);
        candidatosParaContratar.add(candidate);

        // Adiciona a linha na tabela para exibição.
        model.addRow(new Object[]{professionTitle, candidate.getWage(), candidate.getProfitability()});
    }
}
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        hiringTable = new javax.swing.JTable();

        hiringTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Profissão", "Salário", "Profitabilidade"
            }
        ));
        jScrollPane1.setViewportView(hiringTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable hiringTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
